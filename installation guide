## IMPORTANT: Pre-Installation Port Configuration

Before running the installation script, you MUST configure Apache to use ports 8080/8443 instead of 80/443. This is required because Varnish needs port 80 and Hitch needs port 443.

### Option A: Automatic Port Fix (Easiest)

The installation script will attempt to automatically reassign Apache ports. However, if it fails, use Option B or C below.

### Option B: Manual Port Configuration (Recommended)

Run these commands on your server before installation:

```bash
# Update cPanel configuration
sudo sed -i 's/^apache_port=.*/apache_port=0.0.0.0:8080/' /var/cpanel/cpanel.config
sudo sed -i 's/^apache_ssl_port=.*/apache_ssl_port=0.0.0.0:8443/' /var/cpanel/cpanel.config

# Rebuild Apache configuration
sudo /scripts/rebuildhttpdconf

# Restart Apache and cPanel
sudo systemctl stop httpd
sudo systemctl restart cpanel
sudo systemctl start httpd

# Wait and verify
sleep 3
netstat -tuln | grep -E ":(8080|8443)"
```

### Option C: GUI Port Configuration (WHM)

1. Login to WHM (WebHost Manager)
2. Go to: **Server Configuration** â†’ **Tweak Settings**
3. Search for "apache" in the Find box
4. Under System area, update:
   - **Apache non-SSL IP/port**: Change from `0.0.0.0:80` to `0.0.0.0:8080`
   - **Apache SSL port**: Change from `0.0.0.0:443` to `0.0.0.0:8443`
5. Click **Save**
6. Wait for Apache to restart

**Note:** Websites will be temporarily inaccessible during the Apache restart while ports are being reconfigured.

### Verify Port Configuration

Before running the installation, verify Apache is on the correct ports:

```bash
netstat -tuln | grep -E ":(8080|8443)"
```

You should see Apache listening on 8080 and 8443, and ports 80 and 443 should be FREE.

**If ports 80 or 443 are still in use, the installation will fail.** See [QUICK_PORT_FIX.md](docs/QUICK_PORT_FIX.md) for troubleshooting.

1. Preparation

    Backups: Ensure you have current backups of your website and server configuration.
    Check Dependencies: Make sure your system is up to date.
# Run the command below.
dnf update -y

2. Install Varnish

Add the Varnish 7.5 repository and install Varnish.
# Run the command below.
curl -s https://packagecloud.io/install/repositories/varnishcache/varnish75/script.rpm.sh | bash
dnf install varnish -y

3. Install Hitch

Install Hitch, a lightweight TLS proxy that works well with Varnish.
# Run the command below.
dnf install hitch -y

4. Configure Varnish

Configure Varnish to listen on port 80 instead of the default 6081.
Step 1: Edit the Varnish service configuration

Copy the Varnish service file to /etc/systemd/system and modify it:
# Run the command below.
cp /usr/lib/systemd/system/varnish.service /etc/systemd/system/

Edit /etc/systemd/system/varnish.service and change the listening port from 6081 to 80:
Replace this line ExecStart=/usr/sbin/varnishd -a :80 -f /etc/varnish/default.vcl -s malloc,256m
With ExecStart=/usr/sbin/varnishd -a :80 -a 127.0.0.1:4443,proxy -f /etc/varnish/default.vcl -s malloc,256m 

Note: Look for the line ExecStart and add an additional -a flag with the value 127.0.0.1:8443,proxy. 
Using a value of 127.0.0.1:8443 means Varnish will only accept the internal connection (from processes running on the same server i.e hitch in this case) but not external connections.

Save the file and then restart the Varnish service to apply the latest changes.
systemctl restart varnish

5. Configuring and Starting Hitch

Next, configure Varnish as a backend for Hitch and specify the SSL/TLS certificate files to use for HTTPS, in the Hitch main configuration file, open it for editing.
# Run the command below.
vi /etc/hitch/hitch.conf

The frontend section defines the IP addresses and port Hitch will listen to. The default configuration is to listen on all IPv4 and IPv6 interfaces attached on the server and runs on port 443 and handle incoming HTTPS requests, handing them off to Varnish.

Change the default backend proxy port from 6086 to 4443 (the port used to forward requests to Varnish) in the Hitch configuration file, using the backend parameter. Also, specify the certificate file using the pem-file parameter as shown.
backend = "[127.0.0.1]:4443"
#pem-dir = "/etc/pki/tls/private"
pem-file = "path of ssl certificates"

Get the SSLCertificate locations from WHM and cPanel by running the command below.
# Run the command below.
grep SSLCertificate /etc/apache2/conf/httpd.conf | awk '{print $2}'

Copy the non duplicate SSLCertificate paths to the pem-file path above with each on one line
Save the file and close it.

Now start the hitch service and enable it to automatically start at system boot. Note that the --now switch when used with enable, starts a systemd service as well and then check status to see if it is up and running as follows.
# Run the command below.
systemctl enable --now hitch
systemctl status hitch

Edit Varnish backend configuration and replace the 127.0.0.1 with public IP of your server
# Run the command below.
vi /etc/varnish/default.vcl

As documented here https://www.varnish-software.com/developers/tutorials/avoid-http-to-https-redirect-loops-varnish/#create-cache-variations-based-on-the-x-forwarded-proto-header
Add the missing areas like as seen below in the file
vcl 4.1;

import proxy;

backend default {
    .host = "127.0.0.1";
    .port = "8080";
}

sub vcl_recv {
    if(!req.http.X-Forwarded-Proto) {
        if (proxy.is_ssl()) {
            set req.http.X-Forwarded-Proto = "https";
        } else {
            set req.http.X-Forwarded-Proto = "http";
        }
    }    
}

sub vcl_backend_response { 
    if(beresp.http.Vary) {
        set beresp.http.Vary = beresp.http.Vary + ", X-Forwarded-Proto";
    } else {
        set beresp.http.Vary = "X-Forwarded-Proto";
    }
}

Save and exit.

Stop and start both varnish and hitch
# Run the command below.
systemctl stop varnish
systemctl stop hitch
systemctl start varnish
systemctl start hitch

Test hitch configuration response
# Run the command below.
hitch --config=/etc/hitch/hitch.conf --test

Restart hitch, varnish, and apache
# Run the command below.
sudo systemctl restart hitch
sudo systemctl restart varnish
sudo systemctl daemon-reload
sudo systemctl restart httpd


Check the status of both varnish and hitch
# Run the command below.
systemctl status varnish
systemctl status hitch

Verify if Varnish and Hitch is working correctly for client websites on that server and confirm redirection from HTTP to HTTPS.
# Run the command below, before that, replace clientdomain.com with the actual client domain
curl -v https://clientdomain.com
curl -I https://clientdomain.com

Check the header responses and the websites using a browser by trying both http and https.

For clients using WordPress websites, add the code below to their wp-config.php file as documented here https://developer.wordpress.org/advanced-administration/security/https/#using-a-reverse-proxy.
if( strpos( $_SERVER['HTTP_X_FORWARDED_PROTO'], 'https') !== false )
    $_SERVER['HTTPS'] = 'on';



If you have WordPress Installed, please follow the configuration below to optimize it further as seen https://github.com/Ferguson230/updated-varnish-with-hitch/blob/main/vcl%20config%20for%20wordpress.

## Troubleshooting

### Installation Fails with "Address already in use" on Port 80 or 443

This means Apache is still listening on ports 80/443 and Varnish/Hitch cannot bind to those ports.

**Solution:** See [QUICK_PORT_FIX.md](docs/QUICK_PORT_FIX.md) for immediate fixes.

Quick fix:
```bash
sudo bash service/bin/recover_ports.sh
```

Then retry:
```bash
sudo ./install.sh
```

### Varnish Service Fails to Start

1. Check if port 80 is available:
   ```bash
   sudo netstat -tuln | grep :80
   ```
   If anything shows, Apache is still on port 80. Use the port fix above.

2. Check Varnish logs:
   ```bash
   sudo systemctl status varnish
   sudo journalctl -u varnish -n 20
   ```

3. Verify configuration:
   ```bash
   sudo varnishd -f /etc/varnish/default.vcl
   ```

### Hitch Service Fails to Start

1. Check if port 443 is available:
   ```bash
   sudo netstat -tuln | grep :443
   ```
   If anything shows, Apache is still on port 443. Use the port fix above.

2. Verify certificate paths:
   ```bash
   sudo hitch --config=/etc/hitch/hitch.conf --test
   ```

3. Check Hitch logs:
   ```bash
   sudo systemctl status hitch
   sudo journalctl -u hitch -n 20
   ```

### Sites Still Inaccessible After Installation

1. Verify all services are running:
   ```bash
   sudo systemctl status varnish hitch httpd
   ```

2. Test direct access to backend (Apache on 8080):
   ```bash
   curl -v http://localhost:8080/
   ```

3. Check Varnish is responding:
   ```bash
   curl -v http://localhost/
   curl -I http://localhost/ | grep -E "X-Varnish|X-Cache"
   ```

4. Check Hitch/HTTPS:
   ```bash
   curl -v https://localhost/ --insecure
   ```

### For More Help

- See: [QUICK_PORT_FIX.md](docs/QUICK_PORT_FIX.md) - Quick port configuration fixes
- See: [APACHE_PORT_TROUBLESHOOTING.md](docs/APACHE_PORT_TROUBLESHOOTING.md) - Comprehensive troubleshooting guide
- Run: `sudo bash service/bin/recover_ports.sh` - Emergency port recovery script

That's it, enjoy.
